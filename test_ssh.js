var fs = require('fs');var Client = require('ssh2').Client;var conn = new Client();conn.on('ready', function(){	console.log('Client :: ready, executing...');	shellCommand('mysql -u root -h localhost -psquall\nshow databases;\n', function( buffer ){		fs.write( 'test.txt', buffer.toString() );	});}).on('error', function(err){	console.log(err);}).connect({	host: '192.168.0.102',	port: 22,	username: 'root',	password: 'squall'});function executeCommand( cmd, cb ){	conn.exec(cmd, function(err, stream){		if( err ){			console.log(err);		}else{			var chunks = [];			stream.on('data', function(data){				console.log(data.toString());				chunks.push(data);			}).on('end', function(){				var x = Buffer.concat(chunks);				console.log(x.toString());								if( cb && typeof(cb) == 'function' ){					cb();				}			});		}	});}function shellCommand( cmd, cb ){	conn.shell(function(err, stream){		if( err ){			console.log(err);		}else{			var chunks = [];			stream.on('data', function(data){				console.log('data');				console.log(data.toString());				chunks.push(data);			}).on('end', function(){				console.log('end');				var x = Buffer.concat(chunks);								if( cb && typeof(cb) == 'function' ){					cb( x );				}			}).on('close', function(){				console.log('close');			});						stream.stderr.on('data', function(data) {				console.log('STDERR: ' + data);			});						stream.end(cmd);		}	});}